{"version":3,"sources":["images/magic-wand.svg","images/high_arrow.svg","images/low_arrow.svg","images/raindrop.svg","images/wind.svg","images/humidity.svg","redux/actions.js","components/Banner.js","components/Forecast.js","components/Controls.js","components/Weather.js","components/App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["module","exports","receiveData","data","query","type","refresh","dispatch","getState","a","last_query","fetch","then","response","json","catch","error","console","log","Swal","fire","title","icon","html","message","code","Banner","M","AutoInit","id","className","href","src","logo","alt","onChange","props","toggleUnits","React","Component","connect","Forecast","this","cols","forecast","forecastday","filter","f","i","map","key","moment","date","format","day","condition","text","units","avgtemp_f","avgtemp_c","high_arrow","maxtemp_f","maxtemp_c","low_arrow","mintemp_f","mintemp_c","humidity","avghumidity","drop","totalprecip_in","totalprecip_mm","wind","maxwind_mph","mapwind_kph","uv","state","Controls","handleChange","bind","editorText","getWeatherByGeoLocation","e","setState","target","value","htmlFor","name","onClick","getWeatherByManualLocation","mode","isFetching","location","days","url_cur","navigator","geolocation","getCurrentPosition","geoLocationObject","coords","latitude","longitude","url","err","warn","enableHighAccuracy","Weather","current","region","country","temp_f","temp_c","feelslike_f","feelslike_c","wind_mph","wind_kph","wind_dir","App","Boolean","window","hostname","match","defaultState","store","createStore","action","Object","assign","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66b7d5bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magic-wand.f4080908.svg\";","module.exports = __webpack_public_path__ + \"static/media/high_arrow.e0a01615.svg\";","module.exports = __webpack_public_path__ + \"static/media/low_arrow.37c2dbc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/raindrop.ed776451.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.e6649c74.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.895ad6bd.svg\";","import Swal from \"sweetalert2\";\n\nexport const TOGGLE_UNITS = 'TOGGLE_UNITS';\nexport const toggleUnits = () => {\n    return {\n        type: TOGGLE_UNITS\n    }\n}\n\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const requestData = () => {\n    return {\n        type: REQUEST_DATA\n    }\n}\n\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nexport const receiveData = (data, query) => {\n    return {\n        type: RECEIVE_DATA,\n        data,\n        query\n    }\n}\n\nexport const TOGGLE_SPINNER = 'TOGGLE_SPINNER';\nexport const toggleSpinner = () => {\n    return {\n        type: TOGGLE_SPINNER,\n    }\n}\n\nexport const REFRESH = 'REFRESH';\nexport const refresh = () => {\n    return async (dispatch, getState) => {\n        //refresh data\n        dispatch(requestData());\n        const { last_query } = getState();\n        let data = await fetch(last_query)\n                    .then(response => response.json())\n                    .then(data => { return data })\n                    .catch(error => console.error(error));\n        if (data && data.error){\n            console.log(data.error)\n            Swal.fire({\n                title: 'Oops!',\n                icon: \"error\",\n                html: `<br>${data.error.message}\n                    <br>ERROR CODE: ${data.error.code}`,\n            })\n            dispatch(toggleSpinner())\n        } else {\n            let query = last_query;\n            dispatch(receiveData(data, query))\n        }\n    }\n}\n\nexport const GET_WEATHER_BY_MANUAL_LOCATION = 'GET_WEATHER_BY_MANUAL_LOCATION';\nexport const getWeatherByManualLocation = (location, days = 7) => {\n    return async (dispatch, getState) => {\n        dispatch(requestData());\n        const { key } = getState();\n        let url_cur = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${location}&days=${days}`;\n        let data = await fetch(url_cur).then(response => response.json()).then(data => {return data;}).catch(error => console.error(error))\n        if (data && data.error){\n            console.log(data.error)\n            Swal.fire({\n                title: 'Oops!',\n                icon: \"error\",\n                html: `You searched for <b>\"${location}\"</b>.\n                    <br>${data.error.message}\n                    <br>Please check spelling or try another location.\n                    <br>ERROR CODE: ${data.error.code}`,\n            })\n            dispatch(toggleSpinner())\n        } else {\n            let query = url_cur;\n            dispatch(receiveData(data, query))\n        }\n        // console.log(getState())\n    }\n}\n\nexport const GET_WEATHER_BY_GEOLOCATION = 'GET_WEATHER_BY_GEOLOCATION';\nexport const getWeatherByGeoLocation = (days = 7) => {\n    return (dispatch, getState) => {\n        dispatch(requestData());\n        let options = {\n            enableHighAccuracy: true\n        };\n        const error = (err) => console.warn(`Error: ${err.code}: ${err.message}`);\n        const success = (geoLocationObject) => {\n            const { latitude, longitude } = geoLocationObject.coords;\n            const { key } = getState();\n            console.log(`lat: ${latitude}, lon: ${longitude}`)\n            let url = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${latitude},${longitude}&days=${days}`;\n            fetch(url)\n                .then(response => response.json())\n                .then(data => {\n                    let query = url;\n                    dispatch(receiveData(data, query))\n                    console.log(getState())\n                })\n        }\n        navigator.geolocation.getCurrentPosition(success, error, options)\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleUnits } from \"../redux/actions\";\nimport M from \"materialize-css\";\nimport logo from \"../images/magic-wand.svg\";\n\nclass Banner extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n  componentDidMount() {\n    M.AutoInit();\n  }\n  render() {\n    return (\n      <div id=\"app-header\" className=\"z-depth-1\">\n        <div id=\"header-content-wrapper\">\n          <div id='logo-div' className=''>\n            <a href=\"./index.html\" className=\"grey-text text-lighten-5\">\n              {/* <i className='material-icons' style={bannerStyle.i}>cloud_queue</i> */}\n              <h1 id=\"name\">\n                weather\n                <span id=\"wizard\">wizard</span>\n                <img src={logo} id=\"logo\" alt=\"logo\"></img>\n              </h1>\n            </a>\n          </div>\n          <div className=\"switch\" id=\"unit-switch\">\n            <label>\n              &deg;F\n              <input\n                type=\"checkbox\"\n                onChange={() => this.props.toggleUnits()}\n              />\n              <span className=\"lever\"></span>\n              &deg;C\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleUnits: () => dispatch(toggleUnits())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Banner);\n\n// export default Banner;\n","import React from 'react';\nimport M from 'materialize-css';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n// import '../css/Forecast.css';\nimport high_arrow from '../images/high_arrow.svg';\nimport low_arrow from '../images/low_arrow.svg';\nimport drop from '../images/raindrop.svg';\nimport wind from '../images/wind.svg';\nimport humidity from '../images/humidity.svg';\n\n\nclass Forecast extends React.Component {\n    // constructor(props){\n    //     super(props)\n    // }\n    componentDidMount(){\n        M.AutoInit();\n    }\n    render(){\n        // console.log(this.props.forecast.forecastday)\n        // let days = this.props.data.forecast.forecastday.length;\n        return (\n            <div id='forecast-container' className={this.props.cols}>\n                {this.props.forecast.forecastday &&\n                this.props.forecast.forecastday.filter((f,i) => i !== 0).map((f, i) => {\n                    return(\n                        <div key={i} className={'day card'}>\n                            <div className='card-content'>\n                                <span className=\"card-title activator\"><i className=\"material-icons right\">keyboard_arrow_down</i></span>\n                                <div>{moment(f.date).format('ddd')}</div>\n                                <div>{moment(f.date).format('MM/DD')}</div>\n                                <div><img src={f.day.condition.icon} alt={`${f.day.condition.text} icon`}/></div>\n                                <div className='temp'>{this.props.units === 'imperial' ? f.day.avgtemp_f : f.day.avgtemp_c}&deg;{this.props.units === 'imperial' ? 'F' : 'C'}</div>\n                                <div>{f.day.condition.text}</div>\n                            </div>\n                            <div className='card-reveal'>\n                                <ul className='collection'>\n                                    <li className='collection-item'><span className='label'><img src={high_arrow} alt={'high'}/></span>{this.props.units === 'imperial' ? f.day.maxtemp_f : f.day.maxtemp_c}&deg;{this.props.units === 'imperial' ? 'F' : 'C'}</li>\n                                    <li className='collection-item'><span className='label'><img src={low_arrow} alt={'low'}/></span>{this.props.units === 'imperial' ? f.day.mintemp_f : f.day.mintemp_c}&deg;{this.props.units === 'imperial' ? 'F' : 'C'}</li>\n                                    <li className='collection-item'><span className='label'><img src={humidity} alt={'humidity'}/></span>{f.day.avghumidity + '%'}</li>\n                                    <li className='collection-item'><span className='label'><img src={drop} alt={'precipitation'}/></span>{this.props.units === 'imperial' ? f.day.totalprecip_in : f.day.totalprecip_mm}{this.props.units === 'imperial' ? 'in' : 'mm'}</li>\n                                    <li className='collection-item'><span className='label'><img src={wind} alt={'wind'}/></span>{this.props.units === 'imperial' ? f.day.maxwind_mph : f.day.mapwind_kph}{this.props.units === 'imperial' ? 'mph' : 'kph'}</li>\n                                    <li className='collection-item'><span className='label uv'>UV</span>{f.day.uv}</li>\n                                </ul>\n                                <span className=\"card-title grey-text text-darken-4\"><i className=\"material-icons right\">close</i></span>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    const { units, data } = state;\n    return {forecast: data.forecast, units: units }\n} \n\nexport default connect(mapStateToProps)(Forecast);\n\n/*\n\n*/","import React from 'react';\nimport M from 'materialize-css';\nimport { connect } from 'react-redux';\n// import '../css/Controls.css';\nimport { toggleUnits, getWeatherByManualLocation, getWeatherByGeoLocation, refresh } from '../redux/actions';\nimport Swal from 'sweetalert2';\n\nclass Controls extends React.Component {\n    constructor(props){\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n        this.state = { editorText: ''};\n    }\n    componentDidMount(){\n        M.AutoInit();\n        this.props.getWeatherByGeoLocation();\n    }\n    handleChange(e){\n        this.setState( { editorText: e.target.value } )\n    }\n    render(){\n        return(\n            <div id='control-container' className={this.props.cols}>\n                    <div className='input-field'>\n                            <div>\n                            <label htmlFor='location'>Enter Location</label>\n                            <input \n                                type='text'\n                                name='location'\n                                id='location'\n                                value={this.state.editorText}\n                                onChange={this.handleChange}\n                                className='col s12'\n                                />\n                            <button \n                                id='search-btn'\n                                onClick={() => {\n                                    if (this.state.editorText === ''){\n                                        Swal.fire({\n                                            title: \"Where now?\",\n                                            text: \"Please specify a location.\",\n                                            icon: \"question\"\n                                        })\n                                    } else {\n                                        this.props.getWeatherByManualLocation(this.state.editorText);\n                                        this.setState( { editorText: ''} );\n                                    }\n                                }\n                                }\n                                >Search <i className='material-icons'>search</i></button>\n                            </div>\n                            <button \n                                id='geo-btn'\n                                onClick={() => this.props.getWeatherByGeoLocation()}\n                            >My Location <i className='material-icons'>gps_fixed</i>\n                            </button>\n                          \n                    </div>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { data, units, mode, isFetching } = state;\n    return { \n        data,\n        units,\n        mode,\n        isFetching\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleUnits: () => dispatch(toggleUnits()),\n        getWeatherByManualLocation: (location) => dispatch(getWeatherByManualLocation(location)),\n        getWeatherByGeoLocation: () => dispatch(getWeatherByGeoLocation()),\n        refresh: () => dispatch(refresh())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  refresh\n} from \"../redux/actions\";\nimport Forecast from \"./Forecast\";\nimport Controls from \"./Controls\";\n// import '../css/Weather.css';\n\nclass Weather extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <div id=\"weather-component-container\" className=\"section\">\n        {this.props.isFetching ? (\n          <div id=\"spinner-container\">\n            <div id=\"fetchSpinner\" />\n          </div>\n        ) : null}\n        <div className=\"row\">\n          <div id=\"display-container\" className=\"col s12 m6\">\n            {this.props.data.location && this.props.data.current && (\n              <div className=\"card-content\">\n                <div id=\"location-container\">\n                  <h2 id=\"location-title\">{this.props.data.location.name}</h2>\n                  <span id=\"location-region\">\n                    {this.props.data.location.region},{\" \"}\n                  </span>\n                  <span id=\"location-country\">\n                    {this.props.data.location.country}\n                  </span>\n                </div>\n                <div id=\"weather-container\">\n                  <div className=\"condition-summary\">\n                    <img\n                      id=\"weather-icon\"\n                      src={this.props.data.current.condition.icon}\n                      alt={`${this.props.data.current.condition.text} icon`}\n                    />\n                    <div>\n                      <div id=\"weather-condition\">\n                        {this.props.data.current.condition.text}\n                      </div>\n                      <div id=\"temp\">\n                        {this.props.units === \"imperial\" &&\n                          this.props.data.current.temp_f}\n                        {this.props.units === \"imperial\" && <span>&deg;F</span>}\n                        {this.props.units === \"metric\" &&\n                          this.props.data.current.temp_c}\n                        {this.props.units === \"metric\" && <span>&deg;C</span>}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"condition-details\">\n                    <ul id=\"weather-condition\" className=\"\">\n                      <li id=\"feel\" className=\"\">\n                        <span className=\"label\">Feels like: </span>\n                        {this.props.units === \"imperial\" &&\n                          this.props.data.current.feelslike_f}\n                        {this.props.units === \"imperial\" && <span>&deg;F</span>}\n                        {this.props.units === \"metric\" &&\n                          this.props.data.current.feelslike_c}\n                        {this.props.units === \"metric\" && <span>&deg;C</span>}\n                      </li>\n                      <li id=\"wind\" className=\"\">\n                        <span className=\"label\">Wind: </span>\n                        {this.props.units === \"imperial\" &&\n                          this.props.data.current.wind_mph + \" mph \"}\n                        {this.props.units === \"metric\" &&\n                          this.props.data.current.wind_kph + \" kph \"}\n                        <span>{this.props.data.current.wind_dir}</span>\n                      </li>\n                      <li id=\"uv\" className=\"\">\n                        <span className=\"label\">UV index: </span>\n                        {this.props.data.current.uv}\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n            <button \n                id='refresh-btn'\n                onClick={() => this.props.refresh()}>\n              <i className=\"material-icons\">refresh</i>\n            </button>\n          </div>\n          <Controls cols=\"col s12 m6\" />\n        </div>\n        <Forecast cols=\"col s12\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data, units, mode, isFetching } = state;\n  return {\n    data,\n    units,\n    mode,\n    isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n   refresh: () => dispatch(refresh())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\n\n//make api call in action and update store state\n//map state to props\n","import React from 'react';\nimport Banner from './Banner';\nimport Weather from './Weather';\nimport '../css/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Banner />\n      <div className=\"app-container\">\n        <Weather />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { TOGGLE_UNITS, REQUEST_DATA, RECEIVE_DATA, TOGGLE_SPINNER } from './actions';\nimport ReduxThunk from 'redux-thunk';\n\nconst defaultState = {\n    key: '6fa2ee15e2da46c3b7c184521202002',\n    units: 'imperial',\n    mode: 'geo',\n    isFetching: false,\n    data: {\n        forecast: {}\n    }\n}\n\nconst mainReducer = (state = defaultState, action) => {\n    switch(action.type){\n        case TOGGLE_UNITS:\n            return Object.assign({}, state, { units: state.units === 'imperial' ? 'metric' : 'imperial'});\n        case REQUEST_DATA:\n            return Object.assign({}, state, { isFetching: true });\n        case RECEIVE_DATA:\n            console.log('receiving data');\n            return Object.assign({}, state, { isFetching: false, data: action.data, last_query: action.query });\n        case TOGGLE_SPINNER:\n            return Object.assign({}, state, { isFetching: !state.isFetching })\n        default:\n            return state;\n    }\n}\n\nexport const store = createStore(mainReducer, applyMiddleware(ReduxThunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/reducers';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n\n// function resizeBanner() {\n//     if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\n//         document.getElementById('name').style = 'font-size: 1rem;'\n//         document.getElementById('logo').style = 'height: 0.75rem;'\n//     } else {\n//         document.getElementById('name').style = 'font-size: 2rem;'\n//         document.getElementById('logo').style = 'height: 1.5rem;'\n//     }\n// }\n// window.onscroll = () => resizeBanner();"],"sourceRoot":""}