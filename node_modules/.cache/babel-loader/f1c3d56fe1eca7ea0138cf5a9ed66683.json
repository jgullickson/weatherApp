{"ast":null,"code":"var _jsxFileName = \"/Users/jgullick/Documents/PersonalProjects/ReactProjects/weatherApp/src/components/Weather.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleUnits, toggleMode, getWeatherByManualLocation, getWeatherByGeoLocation } from '../redux/actions';\nimport Forecast from './Forecast';\nimport Controls from './Controls'; // import '../css/Weather.css';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"weather-component-container\",\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.isFetching ? React.createElement(\"div\", {\n      id: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"fetchSpinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"display-container\",\n      className: \"col s12 m8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.data.location && this.props.data.current && React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"location-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"location-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.data.location.name), React.createElement(\"span\", {\n      id: \"location-region\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.data.location.region, \", \"), React.createElement(\"span\", {\n      id: \"location-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.data.location.country)), React.createElement(\"div\", {\n      id: \"weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"condition-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"weather-icon\",\n      src: this.props.data.current.condition.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"weather-condition\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.data.current.condition.text), React.createElement(\"div\", {\n      id: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.units == 'imperial' && this.props.data.current.temp_f, this.props.units == 'imperial' && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\xB0F\"), this.props.units == 'metric' && this.props.data.current.temp_c, this.props.units == 'metric' && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\xB0C\")))), React.createElement(\"div\", {\n      className: \"condition-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"weather-condition\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"feel\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Feels like: \"), this.props.units == 'imperial' && this.props.data.current.feelslike_f, this.props.units == 'imperial' && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\xB0F\"), this.props.units == 'metric' && this.props.data.current.feelslike_c, this.props.units == 'metric' && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\xB0C\")), React.createElement(\"li\", {\n      id: \"wind\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Wind: \"), this.props.units == 'imperial' && this.props.data.current.wind_mph + ' mph ', this.props.units == 'metric' && this.props.data.current.wind_kph + ' kph ', React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.data.current.wind_dir)), React.createElement(\"li\", {\n      id: \"uv\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"UV index: \"), this.props.data.current.uv)))))), React.createElement(Controls, {\n      cols: \"col s12 m4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Forecast, {\n      cols: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    data,\n    units,\n    mode,\n    isFetching\n  } = state;\n  return {\n    data,\n    units,\n    mode,\n    isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleUnits: () => dispatch(toggleUnits()),\n    getWeatherByManualLocation: location => dispatch(getWeatherByManualLocation(location)),\n    getWeatherByGeoLocation: () => dispatch(getWeatherByGeoLocation()),\n    toggleMode: () => dispatch(toggleMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather); //make api call in action and update store state\n//map state to props","map":{"version":3,"sources":["/Users/jgullick/Documents/PersonalProjects/ReactProjects/weatherApp/src/components/Weather.js"],"names":["React","connect","toggleUnits","toggleMode","getWeatherByManualLocation","getWeatherByGeoLocation","Forecast","Controls","Weather","Component","constructor","props","render","isFetching","data","location","current","name","region","country","condition","icon","text","units","temp_f","temp_c","feelslike_f","feelslike_c","wind_mph","wind_kph","wind_dir","uv","mapStateToProps","state","mode","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleUnits, toggleMode, getWeatherByManualLocation, getWeatherByGeoLocation } from '../redux/actions';\nimport Forecast from './Forecast';\nimport Controls from './Controls'\n// import '../css/Weather.css';\n\nclass Weather extends React.Component {\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return (\n            <div id='weather-component-container' className='section'>\n                {this.props.isFetching ? <div id='spinner-container'><div id='fetchSpinner'/></div> : null}\n                <div className='row'>\n                <div id='display-container' className='col s12 m8'>\n                    {this.props.data.location && this.props.data.current &&\n                    <div className='card-content'>\n                            <div id='location-container'>\n                                <h2 id='location-title' >{this.props.data.location.name}</h2>\n                                <span id='location-region'>{this.props.data.location.region}, </span>\n                                <span id='location-country'>{this.props.data.location.country}</span>\n                            </div>\n                            <div id='weather-container'>\n                                <div className='condition-summary' >\n                                    <img id='weather-icon' src={this.props.data.current.condition.icon}/>\n                                    <div>\n                                        <div id='weather-condition'>{this.props.data.current.condition.text}</div>\n                                        <div id='temp'>\n                                            {this.props.units == 'imperial' && this.props.data.current.temp_f}\n                                            {this.props.units == 'imperial' && <span>&deg;F</span>}\n                                            {this.props.units == 'metric' && this.props.data.current.temp_c}\n                                            {this.props.units == 'metric' && <span>&deg;C</span>}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"condition-details\">\n                                    <ul id='weather-condition' className=''>\n                                        <li id='feel' className=''>\n                                            <span className='label' >Feels like: </span>\n                                            {this.props.units == 'imperial' && this.props.data.current.feelslike_f}\n                                            {this.props.units == 'imperial' && <span>&deg;F</span>}\n                                            {this.props.units == 'metric' && this.props.data.current.feelslike_c}\n                                            {this.props.units == 'metric' && <span>&deg;C</span>}\n                                        </li>\n                                        <li id='wind' className=''>\n                                            <span className='label'>Wind: </span>\n                                            {this.props.units == 'imperial' && this.props.data.current.wind_mph + ' mph '}\n                                            {this.props.units == 'metric' && this.props.data.current.wind_kph + ' kph '}\n                                            <span>{this.props.data.current.wind_dir}</span>\n                                        </li>\n                                        <li id='uv' className=''>\n                                            <span className='label'>UV index: </span>\n                                            {this.props.data.current.uv}\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <Controls cols='col s12 m4'/>\n                </div>\n                <Forecast cols='col s12'/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { data, units, mode, isFetching } = state;\n    return { \n        data,\n        units,\n        mode,\n        isFetching\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleUnits: () => dispatch(toggleUnits()),\n        getWeatherByManualLocation: (location) => dispatch(getWeatherByManualLocation(location)),\n        getWeatherByGeoLocation: () => dispatch(getWeatherByGeoLocation()),\n        toggleMode: () => dispatch(toggleMode())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\n\n//make api call in action and update store state\n//map state to props\n\n\n"]},"metadata":{},"sourceType":"module"}