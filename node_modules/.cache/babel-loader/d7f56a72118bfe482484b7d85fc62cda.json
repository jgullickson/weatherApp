{"ast":null,"code":"export const TOGGLE_UNITS = 'TOGGLE_UNITS';\nexport const toggleUnits = () => {\n  return {\n    type: TOGGLE_UNITS\n  };\n};\nexport const TOGGLE_MODE = 'TOGGLE_MODE';\nexport const toggleMode = () => {\n  return {\n    type: TOGGLE_MODE\n  };\n};\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const requestData = () => {\n  return {\n    type: REQUEST_DATA\n  };\n};\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nexport const receiveData = data => {\n  return {\n    type: RECEIVE_DATA,\n    data\n  };\n};\nexport const GET_WEATHER_BY_MANUAL_LOCATION = 'GET_WEATHER_BY_MANUAL_LOCATION';\nexport const getWeatherByManualLocation = (location, days = 7) => {\n  return (dispatch, getState) => {\n    dispatch(requestData());\n    const {\n      key\n    } = getState();\n    let url_cur = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${location}&days=${days}`;\n    fetch(url_cur).then(response => response.json()).then(data => {\n      dispatch(receiveData(data));\n      console.log(getState());\n    });\n  };\n};\nexport const GET_WEATHER_BY_GEOLOCATION = 'GET_WEATHER_BY_GEOLOCATION';\nexport const getWeatherByGeoLocation = (days = 7) => {\n  return (dispatch, getState) => {\n    dispatch(requestData());\n    let options = {\n      enableHighAccuracy: true\n    };\n\n    const error = err => console.warn(`Error: ${err.code}: ${err.message}`);\n\n    const success = geoLocationObject => {\n      const {\n        latitude,\n        longitude\n      } = geoLocationObject.coords;\n      const {\n        key\n      } = getState();\n      console.log(`lat: ${latitude}, lon: ${longitude}`);\n      let url = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${latitude},${longitude}&days=${days}`;\n      fetch(url).then(response => response.json()).then(data => {\n        dispatch(receiveData(data));\n        console.log(getState());\n      });\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error, options);\n  };\n};","map":{"version":3,"sources":["/Users/jgullick/Documents/PersonalProjects/ReactProjects/weatherApp/src/redux/actions.js"],"names":["TOGGLE_UNITS","toggleUnits","type","TOGGLE_MODE","toggleMode","REQUEST_DATA","requestData","RECEIVE_DATA","receiveData","data","GET_WEATHER_BY_MANUAL_LOCATION","getWeatherByManualLocation","location","days","dispatch","getState","key","url_cur","fetch","then","response","json","console","log","GET_WEATHER_BY_GEOLOCATION","getWeatherByGeoLocation","options","enableHighAccuracy","error","err","warn","code","message","success","geoLocationObject","latitude","longitude","coords","url","navigator","geolocation","getCurrentPosition"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHF,IAAAA,IAAI,EAAEC;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAME,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHJ,IAAAA,IAAI,EAAEG;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAME,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACHP,IAAAA,IAAI,EAAEK,YADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,8BAA8B,GAAG,gCAAvC;AACP,OAAO,MAAMC,0BAA0B,GAAG,CAACC,QAAD,EAAWC,IAAI,GAAG,CAAlB,KAAwB;AAC9D,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAUD,QAAQ,EAAxB;AACA,QAAIE,OAAO,GAAI,mDAAkDD,GAAI,MAAKJ,QAAS,SAAQC,IAAK,EAAhG;AACAK,IAAAA,KAAK,CAACD,OAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUV,IAAI,IAAI;AACVK,MAAAA,QAAQ,CAACN,WAAW,CAACC,IAAD,CAAZ,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,EAApB;AACH,KALL;AAMH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMS,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,uBAAuB,GAAG,CAACZ,IAAI,GAAG,CAAR,KAAc;AACjD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACA,QAAIoB,OAAO,GAAG;AACVC,MAAAA,kBAAkB,EAAE;AADV,KAAd;;AAGA,UAAMC,KAAK,GAAIC,GAAD,IAASP,OAAO,CAACQ,IAAR,CAAc,UAASD,GAAG,CAACE,IAAK,KAAIF,GAAG,CAACG,OAAQ,EAAhD,CAAvB;;AACA,UAAMC,OAAO,GAAIC,iBAAD,IAAuB;AACnC,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BF,iBAAiB,CAACG,MAAlD;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAUD,QAAQ,EAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAOY,QAAS,UAASC,SAAU,EAAhD;AACA,UAAIE,GAAG,GAAI,mDAAkDtB,GAAI,MAAKmB,QAAS,IAAGC,SAAU,SAAQvB,IAAK,EAAzG;AACAK,MAAAA,KAAK,CAACoB,GAAD,CAAL,CACKnB,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUV,IAAI,IAAI;AACVK,QAAAA,QAAQ,CAACN,WAAW,CAACC,IAAD,CAAZ,CAAR;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,EAApB;AACH,OALL;AAMH,KAXD;;AAYAwB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCR,OAAzC,EAAkDL,KAAlD,EAAyDF,OAAzD;AACH,GAnBD;AAoBH,CArBM","sourcesContent":["export const TOGGLE_UNITS = 'TOGGLE_UNITS';\nexport const toggleUnits = () => {\n    return {\n        type: TOGGLE_UNITS\n    }\n}\n\nexport const TOGGLE_MODE = 'TOGGLE_MODE';\nexport const toggleMode = () => {\n    return {\n        type: TOGGLE_MODE\n    }\n}\n\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const requestData = () => {\n    return {\n        type: REQUEST_DATA\n    }\n}\n\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nexport const receiveData = (data) => {\n    return {\n        type: RECEIVE_DATA,\n        data\n    }\n}\n\nexport const GET_WEATHER_BY_MANUAL_LOCATION = 'GET_WEATHER_BY_MANUAL_LOCATION';\nexport const getWeatherByManualLocation = (location, days = 7) => {\n    return (dispatch, getState) => {\n        dispatch(requestData());\n        const { key } = getState();\n        let url_cur = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${location}&days=${days}`;\n        fetch(url_cur)\n            .then(response => response.json())\n            .then(data => {\n                dispatch(receiveData(data))\n                console.log(getState())\n            })\n    }\n}\n\nexport const GET_WEATHER_BY_GEOLOCATION = 'GET_WEATHER_BY_GEOLOCATION';\nexport const getWeatherByGeoLocation = (days = 7) => {\n    return (dispatch, getState) => {\n        dispatch(requestData());\n        let options = {\n            enableHighAccuracy: true\n        };\n        const error = (err) => console.warn(`Error: ${err.code}: ${err.message}`);\n        const success = (geoLocationObject) => {\n            const { latitude, longitude } = geoLocationObject.coords;\n            const { key } = getState();\n            console.log(`lat: ${latitude}, lon: ${longitude}`)\n            let url = `https://api.weatherapi.com/v1/forecast.json?key=${key}&q=${latitude},${longitude}&days=${days}`;\n            fetch(url)\n                .then(response => response.json())\n                .then(data => {\n                    dispatch(receiveData(data))\n                    console.log(getState())\n                })\n        }\n        navigator.geolocation.getCurrentPosition(success, error, options)\n    }\n}"]},"metadata":{},"sourceType":"module"}